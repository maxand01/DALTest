<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>